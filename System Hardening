System Hardening

System hardening involves enhancing system security to prevent unauthorized access. Key aspects include monitoring and vulnerability management, such as managing root login vulnerabilities and disabling vulnerable daemons (e.g., FTP, telnet, rlogin, finger) and enforcing strong password policies.

User Access Monitoring

1. Display the current user:
   - Solaris: `who am i`
   - Linux: `whoami`
   - Both: `logname`

2. Display all users logged into the system:
   - Commands: `who`, `w`, `whodo`

3. Display previous login sessions and system reboots:
   - Commands: `last`, `last [username]`, `last | grep [username]`, `last [username] | head -1`, `last reboot`, `last | grep reboot`, `last reboot | head -1`, `who -b`

4. Display SU logs:
   - Log file: `/var/adm/sulog`
   - Command: `cat /var/adm/sulog`

5. Display all system logs:
   - Command: `dmesg`
   - Log files:
     - Solaris: `/var/adm/messages`
     - Linux: `/var/log/messages`
   - Commands: `cat /var/adm/messages`, `cat /var/log/messages`

6. Display authentication logs in Linux:
   - Command: `aureport -au -i` (shows all system authentication logs, both successful and unsuccessful logins)
   - For successful logins: `aureport -au -i | grep yes` or `aureport -au -i --success`
   - For unsuccessful logins: `aureport -au -i | grep no` or `aureport -au -i --failed`

7. Failed login attempt monitoring in Solaris:
   - Capture every 5th failed login attempt:
     - Log file: `/var/adm/loginlog`
     - Commands: 
       ```sh
       touch /var/adm/loginlog
       chmod 600 /var/adm/loginlog
       chgrp sys /var/adm/loginlog
       ```
     - Modify `/etc/default/login`: uncomment `SYSLOG_FAILED_LOGIN` and set it to 0
     - Simulate failed login attempts via telnet: `cat /var/adm/loginlog`

**Root Terminal Access Management**

1. Solaris:
   - Default configuration file: `/etc/default/login`
   - Setting: `CONSOLE=/dev/console` (comment out to allow root terminal login)

2. Linux:
   - Default configuration file: `/etc/ssh/sshd_config`
   - Setting: `PermitRootLogin=yes`
   - To prevent root terminal login:
     - Uncomment the line and set the value to no
     - Restart SSH service: `service sshd restart`

3. Disable all user logins:
   - Command: `touch /etc/nologin`
   - To re-enable user login: `rm /etc/nologin`

FTP Management in Solaris

1. File Transfer Protocol:
   - Vulnerable due to clear text data transmission via port 21.
   - Third-party software: Filezilla

2. Connecting to Solaris FTP server:
   - Use browser: `ftp://<server's IP>`

3. Linux FTP (Vsftp):
   - Command: `ftp <IP address>`

4. Remote login commands:
   - Solaris: `ftp`, `telnet`, `rlogin`
   - Multiplatform: `ssh`

5. Managing FTP access in Solaris:
   - Configuration file: `/etc/ftpd/ftpusers`
   - Deny user FTP access: add the user's login name to the `ftpusers` file

Daemon Management

1. Solaris:
   - Display all system daemons: `svcs`, `svcs -a`
   - Check FTP daemon status: `svcs | grep ftp` or `svcs ftp`
   - Display network daemons: `inetadm`, `inetadm | grep ftp`
   - Disable a daemon: `svcadm disable ftp`
   - Enable a daemon: `svcadm enable ftp`
   - Restart a daemon: `svcadm restart ftp`, `inetadm -d ftp`, `inetadm -e ftp`

2. Linux (CentOS 6 and RHEL 6):
   - Display all system daemons: `service --status-all`
   - Check daemon status: `service sshd status`
   - Enable a daemon: `service sshd start`, `chkconfig sshd --level 35 on`
   - Disable a daemon: `service sshd stop`, `chkconfig sshd --level 35 off`
   - Restart a daemon: `service sshd restart`

UNIX/Linux Password Policy

1. Password Complexity:
   - Solaris:
     - Configuration file: `/etc/default/passwd`
     - Settings:
       - `PASSLENGTH=6`: Minimum password length
       - `NAMECHECK=NO`: User's login name in password
       - `HISTORY=0`: Number of old passwords to remember
       - `MINDIFF=3`: Minimum difference between new and old passwords
       - `MINALPHA=2`: Minimum alphabetical characters
       - `MINNONALPHA=1`: Minimum non-alphabetical characters
       - `MINUPPER=0`: Minimum uppercase letters
       - `MINLOWER=1`: Minimum lowercase letters
       - `MAXREPEATS=0`: Maximum repeated characters
       - `MINSPECIAL=0`: Minimum special characters
       - `MINDIGIT=0`: Minimum digits
       - `WHITESPACE=YES`: Allow blank spaces
       - `DICTIONLIST=`: Forbidden dictionary words

   - Linux:
     - Configuration file: `/etc/pam.d/system-auth`
     - Line: `password requisite pam_cracklib.so try_first_pass retry=3`
     - Mappings:
       - `PASSLENGTH`: `minlen`
       - `MINUPPER`: `ucredit`
       - `MINLOWER`: `lcredit`
       - `MINDIGIT`: `dcredit`
       - `MINSPECIAL`: `ocredit`
       - `MINDIFF`: `difok`
     - Example configuration:
       ```sh
       password requisite pam_cracklib.so try_first_pass retry=3 minlen=10 ucredit=-2 lcredit=-2 dcredit=-3 ocredit=-1 difok=-6
       ```

2. Password Aging:
   - Forcing users to change their passwords periodically to enhance security.

   - **Solaris**:
     - Max value: Maximum number of days before password expires
     - Min value: Minimum number of days before password can be changed
     - Warn value: Number of days to warn users of pending password reset
     - Example:
       ```sh
       passwd -x 30 bbush
       passwd -n 15 bbush
       passwd -w 5 bbush
       passwd -x 30 -n 15 -w 5 bbush
       ```

   - Linux:
     - Configuration file: `/etc/login.defs`
     - Example configuration for user `kforty`:
       ```sh
       passwd -x 30 -n 10 -w 5 kforty
       chage -M 45 -m 15 -W 7 kforty
       chage -d 0 kforty (expire password and disable aging)
       ```

Capture and Analyze Traffic

1. Solaris (using `snoop` command):
   - Capture all traffic: `snoop`
   - Specific port: `snoop port 22`
   - Specific protocol: `snoop udp`
   - Specific host: `snoop 192.168.1.1`
   - Specific NIC: `snoop -d e1000g0`
   - Capture to file: `snoop -o /snoopfile`
   - Analyze captured data: `snoop -i /snoopfile`

2. Linux (using `tcpdump` command):
   - Capture all traffic: `tcpdump`
   - Specific port: `tcpdump port 22`
   - Specific protocol: `tcpdump udp`
   - Specific host: `tcpdump 192.168.1.1`
   - Capture to file: `tcpdump -w /dumpfile`
   - Analyze captured data: `tcpdump -r /dumpfile`
   - Specific interface: `tcpdump -i eth0`
